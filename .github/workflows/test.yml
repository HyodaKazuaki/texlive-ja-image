name: test

on:
  push:
  pull_request:
    branches:
        - "**"
  workflow_dispatch:

env:
  # Choose one from from_iso or from_net
  INSTALL_METHOD: from_iso
  MOUNT_DIR: texlive

defaults:
  run:
    shell: bash

jobs:
  build-test:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        version: [2023, 2022, 2021, 2020, 2019]
        option: ["default", "full"]
    steps:
      # Remove unused tools since the runner storage is oppressed by them.
      # ref. https://github.com/orgs/community/discussions/25678
      - name: Check disk space
        run: df -h
      - name: Checkout Apache Flink for disk clean-up
        uses: actions/checkout@v3
        with:
          repository: apache/flink
          path: third_party/flink
          ref: release-1.17.1
      - name: Clean-up disk
        working-directory: third_party/flink
        run: sh ./tools/azure-pipelines/free_disk_space.sh
      - name: Check disk space again
        run: df -h
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check final ISO file existence
        id: final-iso
        shell: bash
        run: |
          set -eux

          # Check final ISO file existence.
          existfin=0
          curl -s -LI -u anonymous:FTP ftp://tug.org/historic/systems/texlive/${{ matrix.version }}/tlnet-final/install-tl-unx.tar.gz || existfin=$?

          echo "existfin=${existfin}" >> "$GITHUB_OUTPUT"
      - name: Cache ISO file
        id: cache-iso
        uses: actions/cache@v3
        with:
          path: texlive.iso
          key: ${{ matrix.version }}-${{ steps.final-iso.outputs.existfin }}
      - name: Download ISO file
        if: steps.cache-iso.outputs.cache-hit != 'true' && env.INSTALL_METHOD == 'from_iso'
        shell: bash
        run: |
          set -eux

          if [ "${{ steps.final-iso.outputs.existfin }}" -eq "0" ]; then
            # Download final version from ftp.
            curl --retry 5 -O -u anonymous:FTP ftp://tug.org/historic/systems/texlive/${{ matrix.version }}/texlive.iso
          else
            # Download latest version from mirror.
            curl -OL http://mirror.ctan.org/systems/texlive/Images/texlive.iso
          fi
      - name: Mount ISO file
        shell: bash
        run: |
          set -eux

          mkdir ${{ env.MOUNT_DIR }}
          sudo mount -o loop -t iso9660 texlive.iso ${{ env.MOUNT_DIR }}
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build
        uses: docker/build-push-action@v4
        with:
          context: .
          build-args: |
            builder_name=${{ env.INSTALL_METHOD }}
            iso_dir=${{ env.MOUNT_DIR }}
            version=${{ matrix.version }}
            option=${{ matrix.option }}
          push: false